# KB Orchestrator Gatekeeper Configuration
# Configuration for the gatekeeper completion check system

github:
  # GitHub API configuration
  api_url: "https://api.github.com"
  rate_limit_buffer: 100 # Reserve API calls

  # Repository settings (can be overridden by environment variables)
  default_repo: "owner/repo" # Set your default repo here

  # Issue filtering
  required_labels:
    - "research-request"
    - "kb-lifecycle"

  # Comment patterns for agent detection
  agent_signature_pattern: "\\[([A-Z_]+)-([0-9T:\\-Z]+)\\]"
  completion_marker_pattern: "\\[.*\\].*COMPLETED"

event_classification:
  # Event type definitions
  parallelizable_events:
    - "research.requested"
    - "research.proposed"
    - "research.active"
    - "implementation.approved"
    - "implementation.active"

  sequential_events:
    - "decision.ready"
    - "decision.review"
    - "metrics.review"
    - "knowledge.captured"

  # Dependency patterns
  dependencies:
    proposal_validated:
      pattern: "\\[.*INTAKE.*\\].*COMPLETED.*proposal.*validated"
      description: "Proposal has been validated by intake agent"

    proposal_approved:
      pattern: "\\[.*CRITIC.*\\].*APPROVED"
      description: "Proposal has been approved by critic"

    plan_approved:
      pattern: "\\[.*CRITIC.*\\].*APPROVED.*plan"
      description: "Research plan has been approved"

    research_complete:
      pattern: "\\[.*RESEARCH.*\\].*COMPLETED"
      description: "Research phase has been completed"

    decision_drafted:
      pattern: "\\[.*DECISION.*\\].*COMPLETED.*draft"
      description: "Decision document has been drafted"

    decision_approved:
      pattern: "\\[.*REVIEW.*\\].*APPROVED"
      description: "Decision has been approved by reviewers"

    metrics_collected:
      pattern: "\\[.*METRICS.*\\].*COMPLETED"
      description: "Metrics have been collected successfully"

timeouts:
  # Stage-specific timeouts
  stage_timeouts:
    research_requested: "1h" # Time limit for intake processing
    research_proposed: "2h" # Time limit for proposal review
    research_active: "8h" # Time limit for research execution
    decision_ready: "2h" # Time limit for decision drafting
    decision_review: "48h" # Time limit for decision review
    implementation_approved: "24h" # Time limit to start implementation
    implementation_active: "variable" # Implementation has no fixed timeout
    metrics_review: "24h" # Time limit for ROI analysis

  # General timeout settings
  agent_timeout: "30m" # Maximum runtime per individual agent
  swarm_timeout: "2h" # Maximum runtime per swarm execution
  scan_timeout: "5m" # Maximum time for event scanning

  # Stale event detection
  stale_threshold: "7d" # Mark events as stale after this period
  inactive_warning: "3d" # Warn about inactive events

blocking_conditions:
  # Conditions that automatically block events
  auto_block_labels:
    - "status:blocked"
    - "status:needs-revision"
    - "status:on-hold"

  # Required information checks
  required_fields:
    - "research_id" # Must have valid research ID
    - "category" # Must have category label
    - "priority" # Must have priority label

  # Resource conflict detection
  max_concurrent_agents:
    research_intake_agent: 3
    decision_synthesis_agent: 1
    peer_review_agent: 2
    implementation_tracker_agent: 5
    default: 10

  # System resource limits
  max_total_active_agents: 20
  max_parallel_swarms: 5

swarm_patterns:
  # Swarm configuration for different event types
  kb-intake-swarm:
    type: "parallel"
    max_agents: 5
    agents:
      - "research_intake_agent"
      - "context_discovery_agent"
    timeout: "1h"
    retry_attempts: 3

  kb-planning-swarm:
    type: "parallel"
    max_agents: 3
    agents:
      - "research_planning_agent"
      - "critic_agent"
    timeout: "2h"
    retry_attempts: 2

  kb-research-swarm:
    type: "parallel"
    max_agents: 8
    agents:
      - "codebase_analyst_agent"
      - "memory_management_agent"
      - "experiment_runner_agent"
    timeout: "8h"
    retry_attempts: 1

  kb-decision-swarm:
    type: "sequential"
    max_agents: 3
    agents:
      - "decision_synthesis_agent"
      - "peer_review_agent"
    timeout: "2h"
    retry_attempts: 2

  kb-decision-review-swarm:
    type: "sequential"
    max_agents: 2
    agents:
      - "peer_review_agent"
      - "critic_agent"
    timeout: "48h"
    retry_attempts: 1

  kb-implementation-swarm:
    type: "parallel"
    max_agents: 3
    agents:
      - "implementation_tracker_agent"
    timeout: "variable"
    retry_attempts: 3

  kb-roi-swarm:
    type: "sequential"
    max_agents: 2
    agents:
      - "roi_analysis_agent"
      - "critic_agent"
    timeout: "24h"
    retry_attempts: 2

logging:
  # Logging configuration
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "gatekeeper.log"

  # Event logging
  log_all_events: true
  log_blocking_reasons: true
  log_swarm_executions: true

  # Audit trail
  completion_reports_dir: "completion-reports"
  override_records_dir: "override-records"

notifications:
  # Notification settings for different conditions
  notify_on_blocking: true
  notify_on_timeout: true
  notify_on_completion: false

  # Notification methods (future extension points)
  methods:
    - "log"
    # - "email"
    # - "slack"
    # - "github_comment"

validation:
  # Validation rules
  strict_mode: true # Fail fast on validation errors
  allow_partial_data: false # Require complete event data
  validate_research_ids: true # Enforce research ID format

  # Research ID validation
  research_id_pattern: "^[A-Z]{3}_\\d{3}$"
  valid_categories: ["AIO", "MEM", "TLI", "ARC", "DEV", "UXP"]
  valid_priorities: ["critical", "high", "medium", "low"]

emergency:
  # Emergency override settings
  allow_override: true
  require_reason: true
  log_overrides: true

  # Override approval (for future implementation)
  require_approval: false
  approved_operators: []

performance:
  # Performance tuning
  concurrent_api_calls: 5 # Max concurrent GitHub API calls
  batch_size: 50 # Event processing batch size
  cache_ttl: "5m" # Cache GitHub data for this duration

  # Rate limiting
  api_calls_per_minute: 50
  backoff_strategy: "exponential"
  max_retry_delay: "5m"
