name: Refresh Bench Baselines

on:
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  refresh:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install trio pytest-asyncio

      - name: Run concurrency benchmarks (asyncio)
        run: |
          python -m benchmarks.concurrency_bench --repeat 5 --backend asyncio --output benchmarks/_ci_out/concurrency-asyncio.json

      - name: Run concurrency benchmarks (trio)
        run: |
          python -m benchmarks.concurrency_bench --repeat 5 --backend trio --output benchmarks/_ci_out/concurrency-trio.json

      - name: Run ln benchmarks (asyncio)
        run: |
          python -m benchmarks.ln_bench --repeat 5 --backend asyncio --output benchmarks/_ci_out/ln-asyncio.json

      - name: Run ln benchmarks (trio)
        run: |
          python -m benchmarks.ln_bench --repeat 5 --backend trio --output benchmarks/_ci_out/ln-trio.json

      - name: Run fuzzy benchmarks
        run: |
          python -m benchmarks.fuzzy_bench --repeat 5 --output benchmarks/_ci_out/fuzzy.json

      - name: Copy outputs to baselines
        run: |
          cp benchmarks/_ci_out/concurrency-asyncio.json benchmarks/baselines/concurrency-asyncio.json
          cp benchmarks/_ci_out/concurrency-trio.json benchmarks/baselines/concurrency-trio.json
          cp benchmarks/_ci_out/ln-asyncio.json benchmarks/baselines/ln-asyncio.json
          cp benchmarks/_ci_out/ln-trio.json benchmarks/baselines/ln-trio.json
          cp benchmarks/_ci_out/fuzzy.json benchmarks/baselines/fuzzy.json

      - name: Create PR with updated baselines (using PR_TOKEN if available)
        id: cpr
        continue-on-error: true
        if: ${{ secrets.PR_TOKEN != '' }}
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PR_TOKEN }}
          branch: chore/refresh-bench-baselines
          title: "chore(benchmarks): refresh CI-native baselines"
          commit-message: "chore(benchmarks): refresh CI-native baselines"
          body: |
            This PR updates benchmark baselines with CI-native measurements.
            - Python: 3.12
            - Repeats: 5
            After merge, the benchmarks workflow gates at 20% thresholds.
          add-paths: |
            benchmarks/baselines/*.json

      - name: Create PR with updated baselines (best-effort with GITHUB_TOKEN)
        id: cpr_fallback
        continue-on-error: true
        if: ${{ secrets.PR_TOKEN == '' }}
        uses: peter-evans/create-pull-request@v6
        with:
          branch: chore/refresh-bench-baselines
          title: "chore(benchmarks): refresh CI-native baselines"
          commit-message: "chore(benchmarks): refresh CI-native baselines"
          body: |
            This PR updates benchmark baselines with CI-native measurements.
            - Python: 3.12
            - Repeats: 5
            After merge, the benchmarks workflow gates at 20% thresholds.
          add-paths: |
            benchmarks/baselines/*.json

      - name: Upload baselines artifact (fallback)
        if: ${{ always() && (steps.cpr.outcome != 'success' || steps.cpr_fallback.outcome != 'success') }}
        uses: actions/upload-artifact@v4
        with:
          name: refreshed-bench-baselines
          path: benchmarks/baselines/*.json
